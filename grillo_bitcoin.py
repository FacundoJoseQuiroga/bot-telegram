# -*- coding: utf-8 -*-
"""grillo_bitcoin

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yTkpiX-MyxHWl8GFdFGQGPQdcKuPzJJQ
"""



!pip install schedule requests


import requests
import schedule
import time

# Token de tu bot de Telegram (obtenido de BotFather)
TELEGRAM_BOT_TOKEN = '5425025548:AAGdZ6FmxQ53Gbd6e1xl-RnEnPwJJANTwYc'

# ID del canal de Telegram (si es público, usa '@nombre_del_canal'; si es privado, usa el ID numérico)
TELEGRAM_CHANNEL_ID = '@grillobitcoin' # O si es privado: '-100XXXXXXXXXX'

# Función para obtener el precio de Bitcoin usando la API de CoinGecko
def obtener_precio_bitcoin():
    url = 'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd'
    response = requests.get(url)
    data = response.json()
    precio = data['bitcoin']['usd']
    return precio

# Función para enviar el mensaje a Telegram utilizando una solicitud HTTP
def enviar_precio_a_telegram():
    try:
        precio = obtener_precio_bitcoin()
        mensaje = f"El precio actual de Bitcoin es: ${precio}"

        # URL para enviar mensajes a un canal de Telegram
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        params = {
            'chat_id': TELEGRAM_CHANNEL_ID,
            'text': mensaje
        }

        # Enviar el mensaje usando una solicitud GET
        response = requests.get(url, params=params)

        # Verificar si el mensaje fue enviado correctamente
        if response.status_code == 200:
            print(f"Mensaje enviado: {mensaje}")
        else:
            print(f"Error al enviar mensaje: {response.status_code} - {response.text}")
    except Exception as e:
        print(f"Error al enviar mensaje: {e}")

# Programar el envío cada minuto
schedule.every(1).minutes.do(enviar_precio_a_telegram)

# Ejecutar el loop
while True:
    schedule.run_pending()
    time.sleep(1)